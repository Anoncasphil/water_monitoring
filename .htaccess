# Root Level Security Configuration
# General security settings for the entire application

# Disable directory browsing
Options -Indexes

# Security headers
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Cache-Control "no-cache, no-store, must-revalidate"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
</IfModule>

# Prevent access to sensitive files
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|inc|bak|sql|db|env|config)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Prevent access to hidden files
<FilesMatch "^\.">
    Order Allow,Deny
    Deny from all
</FilesMatch>

# Allow access to main application files
<FilesMatch "\.(php|html|css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
    Order Allow,Deny
    Allow from all
</FilesMatch>

# Enable URL rewriting for clean URLs (optional)
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Redirect to HTTPS (uncomment if you have SSL)
    # BUT EXCLUDE API endpoints to allow Arduino HTTP access
    # RewriteCond %{HTTPS} off
    # RewriteCond %{REQUEST_URI} !^/api/
    # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Explicitly prevent HTTPS redirect for API endpoints
    RewriteCond %{REQUEST_URI} ^/api/
    RewriteRule .* - [E=no-https-redirect:1]
    
    # Handle 404 errors
    ErrorDocument 404 /login/
    
    # Handle 403 errors
    ErrorDocument 403 /login/
</IfModule>

# PHP settings (if needed)
<IfModule mod_php.c>
    php_value upload_max_filesize 10M
    php_value post_max_size 10M
    php_value max_execution_time 300
    php_value memory_limit 256M
</IfModule> 